ncalls tottime percall cumtime percall filename:lineno(function)
8 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(append)
6 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(argsort)
5 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(atleast_1d)
6 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(atleast_2d)
4 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(bincount)
2 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(can_cast)
25 0.000 0.000 0.015 0.001 <__array_function__ internals>:177(concatenate)
69 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(copyto)
3 0.000 0.000 0.002 0.001 <__array_function__ internals>:177(delete)
1 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(in1d)
4 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(insert)
4 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(moveaxis)
11543 0.020 0.000 0.265 0.000 <__array_function__ internals>:177(prod)
11542 0.018 0.000 0.056 0.000 <__array_function__ internals>:177(putmask)
8 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(ravel)
1 0.000 0.000 0.000 0.000 <__array_function__ internals>:177(setdiff1d)
6 0.000 0.000 0.013 0.002 <__array_function__ internals>:177(vstack)
23082 0.036 0.000 0.173 0.000 <__array_function__ internals>:177(where)
34658 0.048 0.000 0.061 0.000 <frozen importlib._bootstrap>:1053(_handle_fromlist)
1 0.000 0.000 0.000 0.000 <string>:1(<module>)
35776 0.057 0.000 0.117 0.000 __init__.py:152(align_method_SERIES)
9337 0.780 0.000 2.079 0.000 __init__.py:328(namedtuple)
139534 0.032 0.000 0.032 0.000 __init__.py:402(<genexpr>)
65555 0.051 0.000 0.088 0.000 __init__.py:420(_make)
3 0.000 0.000 0.000 0.000 _asarray.py:111(<setcomp>)
3 0.000 0.000 0.000 0.000 _asarray.py:22(require)
11 0.000 0.000 0.000 0.000 _collections_abc.py:315(__subclasshook__)
2 0.000 0.000 0.000 0.000 _collections_abc.py:409(__subclasshook__)
11545 0.022 0.000 0.024 0.000 _decorators.py:214(_format_argument_list)
11545 0.048 0.000 15.225 0.001 _decorators.py:302(wrapper)
8 0.000 0.000 0.000 0.000 _dtype.py:103(_scalar_str)
8 0.000 0.000 0.000 0.000 _dtype.py:160(_byte_order_str)
201627 0.095 0.000 0.095 0.000 _dtype.py:24(_kind_name)
201619 0.214 0.000 0.793 0.000 _dtype.py:314(_name_includes_bit_suffix)
201619 0.564 0.000 1.609 0.000 _dtype.py:328(_name_get)
141108 0.370 0.000 1.544 0.000 _dtype.py:34(__str__)
8 0.000 0.000 0.000 0.000 _dtype.py:45(__repr__)
8 0.000 0.000 0.000 0.000 _dtype.py:68(_construction_repr)
4 0.000 0.000 0.000 0.000 _internal.py:863(npy_ctypes_check)
159733 0.054 0.000 0.302 0.000 _methods.py:38(_amax)
159728 0.069 0.000 0.635 0.000 _methods.py:42(_amin)
332925 0.166 0.000 1.444 0.000 _methods.py:54(_any)
4 0.000 0.000 0.000 0.000 _methods.py:60(_all)
173668 0.325 0.000 0.350 0.000 _ufunc_config.py:131(geterr)
173668 0.405 0.000 1.003 0.000 _ufunc_config.py:32(seterr)
86834 0.053 0.000 0.053 0.000 _ufunc_config.py:425(__init__)
86834 0.120 0.000 0.719 0.000 _ufunc_config.py:429(__enter__)
86834 0.117 0.000 0.521 0.000 _ufunc_config.py:434(__exit__)
23179 0.015 0.000 0.019 0.000 _validators.py:218(validate_bool_kwarg)
11541 0.025 0.000 0.035 0.000 _validators.py:427(validate_ascending)
20 0.000 0.000 0.000 0.000 abc.py:117(__instancecheck__)
19/6 0.000 0.000 0.000 0.000 abc.py:121(__subclasscheck__)
46178 0.104 0.000 0.615 0.000 algorithms.py:115(_ensure_data)
280197 0.580 0.000 5.470 0.000 algorithms.py:1352(take)
23090 0.144 0.000 0.975 0.000 algorithms.py:1663(safe_sort)
23089 0.067 0.000 0.220 0.000 algorithms.py:193(_reconstruct_data)
51623 0.051 0.000 0.541 0.000 algorithms.py:237(_ensure_arraylike)
23089 0.043 0.000 0.353 0.000 algorithms.py:289(_get_values_for_rank)
23089 0.043 0.000 0.754 0.000 algorithms.py:299(_get_data_algo)
23089 0.107 0.000 0.350 0.000 algorithms.py:308(_check_object_for_strings)
14267 0.465 0.000 1.571 0.000 algorithms.py:448(isin)
23089 0.105 0.000 1.285 0.000 algorithms.py:524(factorize_array)
23089 0.315 0.000 3.334 0.000 algorithms.py:568(factorize)
3 0.000 0.000 0.000 0.000 api.py:102(_get_distinct_objs)
3 0.000 0.000 0.000 0.000 api.py:116(_get_combined_index)
1 0.000 0.000 0.000 0.000 api.py:168(union_indexes)
1 0.000 0.000 0.000 0.000 api.py:194(_unique_indices)
2 0.000 0.000 0.000 0.000 api.py:209(conv)
1 0.000 0.000 0.000 0.000 api.py:214(<listcomp>)
2 0.000 0.000 0.000 0.000 api.py:255(<genexpr>)
1 0.000 0.000 0.000 0.000 api.py:266(_sanitize_and_check)
1 0.000 0.000 0.000 0.000 api.py:287(<setcomp>)
4 0.000 0.000 0.000 0.000 api.py:322(default_index)
3 0.000 0.000 0.000 0.000 api.py:72(get_objs_combined_axis)
3 0.000 0.000 0.000 0.000 api.py:98(<listcomp>)
35776 0.105 0.000 0.487 0.000 array_ops.py:134(_na_arithmetic_op)
86830 0.473 0.000 2.985 0.000 array_ops.py:227(comparison_op)
35776 0.055 0.000 0.213 0.000 array_ops.py:291(na_logical_op)
35776 0.195 0.000 1.046 0.000 array_ops.py:332(logical_op)
71552 0.082 0.000 0.315 0.000 array_ops.py:350(fill_bool)
51054 0.160 0.000 0.940 0.000 array_ops.py:58(comp_method_OBJECT_ARRAY)
51058 0.064 0.000 7.875 0.000 arraylike.py:38(__eq__)
17888 0.029 0.000 2.886 0.000 arraylike.py:50(__le__)
17888 0.021 0.000 2.419 0.000 arraylike.py:58(__ge__)
35776 0.042 0.000 4.615 0.000 arraylike.py:68(__and__)
1 0.000 0.000 0.000 0.000 arraysetops.py:515(_in1d_dispatcher)
1 0.000 0.000 0.000 0.000 arraysetops.py:519(in1d)
1 0.000 0.000 0.000 0.000 arraysetops.py:780(_setdiff1d_dispatcher)
1 0.000 0.000 0.000 0.000 arraysetops.py:784(setdiff1d)
6 0.000 0.000 0.000 0.000 base.py:106(__eq__)
76869 0.469 0.000 1.431 0.000 base.py:1098(take)
76869 0.030 0.000 0.030 0.000 base.py:1124(_maybe_disallow_fill)
3 0.000 0.000 0.000 0.000 base.py:1198(copy)
2 0.000 0.000 0.000 0.000 base.py:130(<genexpr>)
62224 0.105 0.000 0.145 0.000 base.py:135(__hash__)
62224 0.014 0.000 0.014 0.000 base.py:138(<genexpr>)
163260 0.085 0.000 0.244 0.000 base.py:163(array)
99980 0.028 0.000 0.028 0.000 base.py:1650(name)
3 0.000 0.000 0.000 0.000 base.py:1668(_validate_names)
23097 0.026 0.000 0.032 0.000 base.py:1701(_get_names)
163260 0.295 0.000 2.640 0.000 base.py:172(setitem_inplace)
36041 0.048 0.000 1.595 0.000 base.py:210(interleaved_dtype)
23090 0.139 0.000 0.257 0.000 base.py:2232(is_unique)
12 0.000 0.000 0.000 0.000 base.py:2272(is_boolean)
60 0.000 0.000 0.000 0.000 base.py:229(construct_from_string)
23102 0.008 0.000 0.008 0.000 base.py:229(disallow_kwargs)
7804 0.006 0.000 0.007 0.000 base.py:2308(is_integer)
155755 0.077 0.000 0.077 0.000 base.py:2344(is_floating)
194455 0.142 0.000 0.742 0.000 base.py:2432(is_object)
11 0.000 0.000 0.000 0.000 base.py:2596(inferred_type)
4 0.000 0.000 0.000 0.000 base.py:2603(_is_all_dates)
18 0.000 0.000 0.000 0.000 base.py:2624(_is_multi)
42508 0.081 0.000 0.109 0.000 base.py:2642(_na_value)
23082 0.027 0.000 0.100 0.000 base.py:2665(hasnans)
1 0.000 0.000 0.000 0.000 base.py:2844(unique)
69281 0.075 0.000 0.247 0.000 base.py:286(is_dtype)
1 0.000 0.000 0.000 0.000 base.py:3050(_validate_sort_keyword)
1 0.000 0.000 0.000 0.000 base.py:3258(_wrap_setop_result)
558977 0.072 0.000 0.072 0.000 base.py:326(ndim)
1 0.000 0.000 0.000 0.000 base.py:3400(difference)
1 0.000 0.000 0.000 0.000 base.py:3451(_difference)
1 0.000 0.000 0.000 0.000 base.py:3465(_wrap_difference_result)
1 0.000 0.000 0.000 0.000 base.py:3554(_assert_can_do_setop)
1 0.000 0.000 0.000 0.000 base.py:3560(_convert_can_do_setop)
155755 0.188 0.000 0.696 0.000 base.py:3577(get_loc)
1 0.000 0.000 0.000 0.000 base.py:358(size)
5 0.000 0.000 0.001 0.000 base.py:3706(get_indexer)
5 0.000 0.000 0.000 0.000 base.py:3786(_get_indexer)
5 0.000 0.000 0.000 0.000 base.py:3823(_check_indexing_method)
23111/23102 0.245 0.000 0.955 0.000 base.py:397(__new__)
99158 0.083 0.000 0.200 0.000 base.py:45(__len__)
12728 0.011 0.000 0.016 0.000 base.py:465(find)
404867 0.086 0.000 0.086 0.000 base.py:4820(_values)
23096 0.016 0.000 0.019 0.000 base.py:4846(_get_engine_target)
4 0.000 0.000 0.000 0.000 base.py:4931(_validate_fill_value)
341759 0.369 0.000 0.427 0.000 base.py:4973(__contains__)
407438 0.510 0.000 0.786 0.000 base.py:5023(__getitem__)
30962 0.054 0.000 0.157 0.000 base.py:5071(_getitem_slice)
194455 0.195 0.000 1.240 0.000 base.py:5078(_can_hold_identifiers_and_holds_name)
231752 0.416 0.000 1.130 0.000 base.py:5178(equals)
6 0.000 0.000 0.000 0.000 base.py:518(<genexpr>)
81299 0.172 0.000 0.388 0.000 base.py:53(shape)
20 0.000 0.000 0.000 0.000 base.py:540(_ensure_array)
243897 0.083 0.000 0.215 0.000 base.py:55(<genexpr>)
23102 0.088 0.000 0.277 0.000 base.py:554(_dtype_to_subclass)
93358 0.094 0.000 0.244 0.000 base.py:5646(_get_values_for_loc)
1 0.000 0.000 0.000 0.000 base.py:57(_validate_set_axis)
3 0.000 0.000 0.001 0.000 base.py:5744(get_indexer_for)
7804 0.006 0.000 0.007 0.000 base.py:5905(_index_as_unique)
5 0.000 0.000 0.000 0.000 base.py:5917(_maybe_promote)
6 0.000 0.000 0.000 0.000 base.py:6004(_should_compare)
6 0.000 0.000 0.000 0.000 base.py:6022(_is_comparable_dtype)
1 0.000 0.000 0.000 0.000 base.py:6112(_transform_index)
1 0.000 0.000 0.000 0.000 base.py:6131(<listcomp>)
155755 0.165 0.000 0.341 0.000 base.py:6284(_maybe_cast_indexer)
5 0.000 0.000 0.000 0.000 base.py:6293(_maybe_cast_listlike_indexer)
1 0.000 0.000 0.000 0.000 base.py:6521(delete)
130941 0.326 0.000 0.466 0.000 base.py:654(_simple_new)
4 0.000 0.000 0.001 0.000 base.py:6561(insert)
1 0.000 0.000 0.000 0.000 base.py:6615(drop)
23095 0.167 0.000 1.502 0.000 base.py:672(_with_infer)
42510 0.011 0.000 0.011 0.000 base.py:692(_constructor)
174623 0.070 0.000 0.094 0.000 base.py:6987(ensure_index)
197719 0.159 0.000 0.450 0.000 base.py:7082(maybe_extract_name)
20 0.000 0.000 0.001 0.000 base.py:7106(_maybe_cast_data_without_dtype)
1 0.000 0.000 0.000 0.000 base.py:7149(get_unanimous_names)
1 0.000 0.000 0.000 0.000 base.py:7162(<listcomp>)
1 0.000 0.000 0.000 0.000 base.py:7163(<listcomp>)
2 0.000 0.000 0.000 0.000 base.py:7164(<genexpr>)
6 0.000 0.000 0.000 0.000 base.py:7168(unpack_nested_dtype)
1 0.000 0.000 0.000 0.000 base.py:7191(_maybe_try_sort)
2 0.000 0.000 0.000 0.000 base.py:723(tolist)
141748 0.344 0.000 0.690 0.000 base.py:744(__iter__)
1 0.000 0.000 0.000 0.000 base.py:768(_shallow_copy)
6 0.000 0.000 0.000 0.000 base.py:785(_view)
3 0.000 0.000 0.000 0.000 base.py:794(_rename)
231752 0.101 0.000 0.117 0.000 base.py:803(is_)
130945 0.069 0.000 0.069 0.000 base.py:834(_reset_identity)
23091 0.084 0.000 0.118 0.000 base.py:845(_engine)
1159758 0.409 0.000 0.554 0.000 base.py:884(__len__)
119383 0.043 0.000 0.043 0.000 base.py:937(dtype)
2 0.000 0.000 0.000 0.000 base.py:974(view)
153740 0.419 0.000 4.239 0.000 blocks.py:1114(take_nd)
1 0.000 0.000 0.001 0.001 blocks.py:135(newfunc)
8816 0.024 0.000 0.261 0.000 blocks.py:1461(get_values)
8824 0.009 0.000 0.021 0.000 blocks.py:1504(shape)
62227 0.117 0.000 0.371 0.000 blocks.py:1511(iget)
101664 0.245 0.000 8.505 0.000 blocks.py:1623(take_nd)
41 0.000 0.000 0.000 0.000 blocks.py:166(_consolidate_key)
39432 0.052 0.000 0.368 0.000 blocks.py:1690(getitem_block_index)
23 0.000 0.000 0.001 0.000 blocks.py:1916(convert)
174663 0.255 0.000 0.442 0.000 blocks.py:1960(maybe_coerce_values)
174659 0.262 0.000 0.336 0.000 blocks.py:1989(get_block_type)
18 0.000 0.000 0.000 0.000 blocks.py:2030(new_block_2d)
174638 0.522 0.000 1.758 0.000 blocks.py:2041(new_block)
174638 0.247 0.000 0.436 0.000 blocks.py:2055(check_ndim)
3956 0.006 0.000 0.008 0.000 blocks.py:2119(extend_blocks)
30 0.000 0.000 0.000 0.000 blocks.py:2135(ensure_block_shape)
4408 0.004 0.000 0.013 0.000 blocks.py:222(get_values)
133272 0.130 0.000 1.639 0.000 blocks.py:238(fill_value)
134380 0.031 0.000 0.031 0.000 blocks.py:244(mgr_locs)
1 0.000 0.000 0.000 0.000 blocks.py:248(mgr_locs)
30 0.000 0.000 0.000 0.000 blocks.py:252(make_block)
255413 0.643 0.000 2.191 0.000 blocks.py:267(make_block_same_class)
1 0.000 0.000 0.000 0.000 blocks.py:306(__len__)
11 0.005 0.000 0.005 0.000 blocks.py:310(_slice)
8 0.000 0.000 0.005 0.001 blocks.py:315(getitem_block)
3 0.000 0.000 0.000 0.000 blocks.py:332(getitem_block_columns)
18 0.000 0.000 0.000 0.000 blocks.py:350(shape)
319721 0.157 0.000 0.669 0.000 blocks.py:354(dtype)
580459 0.297 0.000 0.297 0.000 blocks.py:358(iget)
1 0.000 0.000 0.002 0.002 blocks.py:378(delete)
1 0.000 0.000 0.000 0.000 blocks.py:490(_split)
1 0.000 0.000 0.001 0.001 blocks.py:506(split_and_operate)
7 0.000 0.000 0.019 0.003 blocks.py:560(astype)
3912 0.006 0.000 0.032 0.000 blocks.py:606(_can_hold_element)
34 0.000 0.000 0.012 0.000 blocks.py:638(copy)
9 0.000 0.000 0.037 0.004 blocks.py:649(replace)
3902 0.027 0.000 0.119 0.000 blocks.py:896(setitem)
4 0.000 0.000 0.000 0.000 boolean.py:314(__init__)
1 0.000 0.000 0.000 0.000 cProfile.py:117(__exit__)
5 0.000 0.000 0.018 0.004 cast.py:1075(astype_nansafe)
7 0.000 0.000 0.018 0.003 cast.py:1199(astype_array)
7 0.000 0.000 0.018 0.003 cast.py:1246(astype_array_safe)
23 0.000 0.000 0.001 0.000 cast.py:1304(soft_convert_objects)
3912 0.023 0.000 0.037 0.000 cast.py:1466(maybe_infer_to_datetimelike)
9 0.000 0.000 0.000 0.000 cast.py:1579(maybe_cast_to_datetime)
159964 0.117 0.000 0.117 0.000 cast.py:1711(sanitize_to_nanoseconds)
36042 0.341 0.000 1.542 0.000 cast.py:1789(find_common_type)
134827 0.049 0.000 0.064 0.000 cast.py:1819(<genexpr>)
18674 0.010 0.000 0.021 0.000 cast.py:1828(<genexpr>)
18674 0.006 0.000 0.013 0.000 cast.py:1830(<genexpr>)
28011 0.010 0.000 0.064 0.000 cast.py:1835(<genexpr>)
4 0.000 0.000 0.000 0.000 cast.py:1873(construct_1d_arraylike_from_scalar)
28543 0.075 0.000 0.149 0.000 cast.py:1960(construct_1d_object_array_from_listlike)
1 0.000 0.000 0.000 0.000 cast.py:2088(convert_scalar_for_putitemlike)
1 0.000 0.000 0.000 0.000 cast.py:2110(_validate_numeric_casting)
3916 0.009 0.000 0.013 0.000 cast.py:2147(can_hold_element)
131396 0.169 0.000 0.284 0.000 cast.py:2185(np_can_hold_element)
1 0.000 0.000 0.000 0.000 cast.py:454(ensure_dtype_can_hold_na)
380159 0.376 0.000 0.377 0.000 cast.py:468(maybe_promote)
3 0.000 0.000 0.000 0.000 cast.py:507(_maybe_promote_cached)
3 0.000 0.000 0.000 0.000 cast.py:515(_maybe_promote)
3 0.000 0.000 0.000 0.000 cast.py:649(_ensure_dtype_type)
6 0.000 0.000 0.000 0.000 cast.py:674(infer_dtype_from)
10 0.000 0.000 0.000 0.000 cast.py:691(infer_dtype_from_scalar)
109603 0.052 0.000 0.092 0.000 cast.py:854(maybe_infer_dtype_type)
23082 0.023 0.000 0.145 0.000 cast.py:939(coerce_indexer_dtype)
46164 0.013 0.000 0.013 0.000 categorical.py:1934(_codes)
23082 0.338 0.000 7.264 0.000 categorical.py:365(__init__)
23082 0.011 0.000 0.011 0.000 categorical.py:476(dtype)
23082 0.024 0.000 0.038 0.000 categorical.py:716(categories)
46164 0.108 0.000 0.138 0.000 categorical.py:766(codes)
86836 0.160 0.000 0.185 0.000 common.py:1042(is_numeric_v_string_like)
461738 0.563 0.000 2.137 0.000 common.py:105(is_bool_indexer)
127823 0.117 0.000 0.151 0.000 common.py:1148(needs_i8_conversion)
173868 0.188 0.000 0.493 0.000 common.py:1240(is_float_dtype)
332634 0.445 0.000 1.145 0.000 common.py:1274(is_bool_dtype)
2 0.000 0.000 0.000 0.000 common.py:1399(is_1d_only_ea_obj)
174683 0.062 0.000 0.111 0.000 common.py:1416(is_1d_only_ea_dtype)
157659 0.135 0.000 0.214 0.000 common.py:1429(is_extension_array_dtype)
706052 0.268 0.000 0.268 0.000 common.py:145(classes)
706052 0.206 0.000 0.330 0.000 common.py:147(<lambda>)
46222 0.036 0.000 0.050 0.000 common.py:1483(is_ea_or_datetimelike_dtype)
284722 0.076 0.000 0.076 0.000 common.py:150(classes_and_not_datetimelike)
35784 0.033 0.000 0.078 0.000 common.py:1528(_is_dtype)
284722 0.170 0.000 0.232 0.000 common.py:155(<lambda>)
726516 0.331 0.000 0.523 0.000 common.py:1552(get_dtype)
990774 0.843 0.000 1.888 0.000 common.py:1587(_is_dtype_type)
563193 0.237 0.000 0.318 0.000 common.py:160(cast_scalar_indexer)
532175 0.549 0.000 1.857 0.000 common.py:161(is_object_dtype)
434104 0.306 0.000 1.029 0.000 common.py:1721(validate_all_hashable)
868208 0.267 0.000 0.501 0.000 common.py:1740(<genexpr>)
179562 0.151 0.000 0.241 0.000 common.py:1747(pandas_dtype)
3 0.000 0.000 0.000 0.000 common.py:187(not_none)
9 0.000 0.000 0.000 0.000 common.py:191(<genexpr>)
29 0.000 0.000 0.000 0.000 common.py:229(asarray_tuplesafe)
178174 0.115 0.000 0.135 0.000 common.py:297(is_null_slice)
41243 0.032 0.000 0.039 0.000 common.py:315(is_datetime64_dtype)
3902 0.002 0.000 0.002 0.000 common.py:317(is_full_slice)
900568 0.259 0.000 0.373 0.000 common.py:346(apply_if_callable)
8 0.000 0.000 0.000 0.000 common.py:348(is_datetime64tz_dtype)
32436 0.018 0.000 0.022 0.000 common.py:389(is_timedelta64_dtype)
5 0.000 0.000 0.000 0.000 common.py:459(is_interval_dtype)
23110 0.024 0.000 0.093 0.000 common.py:497(is_categorical_dtype)
1 0.000 0.000 0.000 0.000 common.py:500(get_rename_function)
26 0.000 0.000 0.000 0.000 common.py:507(f)
23082 0.019 0.000 0.023 0.000 common.py:519(convert_to_list_like)
6 0.000 0.000 0.000 0.000 common.py:533(is_string_or_object_np_dtype)
35784 0.038 0.000 0.116 0.000 common.py:540(is_string_dtype)
122610 0.282 0.000 18.476 0.000 common.py:55(new_method)
174617 0.107 0.000 0.302 0.000 common.py:552(require_length_match)
35784 0.021 0.000 0.021 0.000 common.py:569(condition)
179049 0.228 0.000 0.479 0.000 common.py:581(is_dtype_equal)
238518 0.208 0.000 0.752 0.000 common.py:680(is_integer_dtype)
23102 0.021 0.000 0.064 0.000 common.py:732(is_signed_integer_dtype)
122607 0.111 0.000 0.412 0.000 common.py:75(get_op_result_name)
23102 0.024 0.000 0.056 0.000 common.py:786(is_unsigned_integer_dtype)
35777 0.070 0.000 0.143 0.000 common.py:97(_maybe_match_name)
1 0.000 0.000 0.000 0.000 concat.py:106(<listcomp>)
1 0.000 0.000 0.000 0.000 concat.py:111(<setcomp>)
3 0.000 0.000 0.000 0.000 concat.py:112(<genexpr>)
1 0.000 0.000 0.000 0.000 concat.py:117(<setcomp>)
3 0.000 0.000 0.000 0.000 concat.py:118(<genexpr>)
3 0.000 0.000 0.017 0.006 concat.py:143(concat)
3 0.000 0.000 0.012 0.004 concat.py:174(concatenate_managers)
3 0.000 0.000 0.006 0.002 concat.py:209(<listcomp>)
3 0.000 0.000 0.000 0.000 concat.py:225(<listcomp>)
3 0.000 0.000 0.000 0.000 concat.py:290(_maybe_reindex_columns_na_proxy)
4 0.000 0.000 0.006 0.001 concat.py:320(_get_mgr_concatenation_plan)
3 0.000 0.000 0.001 0.000 concat.py:368(__init__)
14 0.000 0.000 0.000 0.000 concat.py:390(__init__)
8 0.000 0.000 0.000 0.000 concat.py:398(is_na)
2 0.000 0.000 0.000 0.000 concat.py:405(get_reindexed_values)
1 0.000 0.000 0.000 0.000 concat.py:424(make_na_array)
3 0.000 0.000 0.000 0.000 concat.py:455(<listcomp>)
1 0.000 0.000 0.001 0.001 concat.py:458(_concatenate_join_units)
1 0.000 0.000 0.000 0.000 concat.py:465(<listcomp>)
3 0.000 0.000 0.000 0.000 concat.py:479(<genexpr>)
1 0.000 0.000 0.000 0.000 concat.py:500(_dtype_to_na_value)
1 0.000 0.000 0.000 0.000 concat.py:520(_get_empty_dtype)
3 0.000 0.000 0.000 0.000 concat.py:538(<genexpr>)
1 0.000 0.000 0.000 0.000 concat.py:540(<listcomp>)
3 0.004 0.001 0.016 0.005 concat.py:544(get_result)
4 0.000 0.000 0.000 0.000 concat.py:548(_is_uniform_join_units)
12 0.000 0.000 0.000 0.000 concat.py:560(<genexpr>)
9 0.000 0.000 0.000 0.000 concat.py:563(<genexpr>)
9 0.000 0.000 0.000 0.000 concat.py:573(<genexpr>)
1 0.000 0.000 0.000 0.000 concat.py:580(_is_uniform_reindex)
2 0.000 0.000 0.000 0.000 concat.py:583(<genexpr>)
1 0.000 0.000 0.000 0.000 concat.py:588(_trim_join_unit)
13 0.000 0.000 0.000 0.000 concat.py:604(_combine_concat_plans)
3 0.000 0.000 0.000 0.000 concat.py:604(_get_result_dim)
3 0.000 0.000 0.000 0.000 concat.py:610(_get_new_axes)
3 0.000 0.000 0.000 0.000 concat.py:612(<listcomp>)
3 0.000 0.000 0.000 0.000 concat.py:617(_get_comb_axis)
9 0.000 0.000 0.000 0.000 concat.py:618(_next_or_none)
3 0.000 0.000 0.000 0.000 concat.py:627(_get_concat_axis)
3 0.000 0.000 0.000 0.000 concat.py:661(<listcomp>)
7 0.000 0.000 0.000 0.000 concat.py:664(<genexpr>)
1 0.000 0.000 0.001 0.001 concat.py:74(concat_compat)
2 0.000 0.000 0.000 0.000 concat.py:95(is_nonempty)
174612 0.340 0.000 0.907 0.000 config.py:109(_get_single_key)
174612 0.216 0.000 1.506 0.000 config.py:127(_get_option)
174612 0.136 0.000 1.643 0.000 config.py:255(__call__)
174612 0.111 0.000 0.111 0.000 config.py:571(_select_options)
174612 0.287 0.000 0.383 0.000 config.py:589(_get_root)
349224 0.245 0.000 0.245 0.000 config.py:603(_get_deprecated_option)
174612 0.068 0.000 0.140 0.000 config.py:630(_translate_key)
174612 0.102 0.000 0.274 0.000 config.py:642(_warn_if_deprecated)
3 0.000 0.000 0.001 0.000 construction.py:102(arrays_to_mgr)
1 0.000 0.000 0.001 0.001 construction.py:1051(_convert_object_array)
9 0.000 0.000 0.001 0.000 construction.py:1067(convert)
1 0.000 0.000 0.001 0.001 construction.py:1073(<listcomp>)
3 0.000 0.000 0.000 0.000 construction.py:233(mgr_to_mgr)
407764 0.251 0.000 1.115 0.000 construction.py:379(extract_array)
2 0.000 0.000 0.001 0.000 construction.py:425(dict_to_mgr)
451787 0.326 0.000 0.371 0.000 construction.py:438(ensure_wrapped_if_datetimelike)
197712 1.000 0.000 3.035 0.000 construction.py:470(sanitize_array)
2 0.000 0.000 0.000 0.000 construction.py:483(<listcomp>)
2 0.000 0.000 0.000 0.000 construction.py:486(<listcomp>)
2 0.000 0.000 0.000 0.000 construction.py:487(<listcomp>)
2 0.000 0.000 0.000 0.000 construction.py:494(<listcomp>)
1 0.000 0.000 0.004 0.004 construction.py:505(nested_data_to_arrays)
1 0.000 0.000 0.000 0.000 construction.py:534(treat_as_nested)
3 0.000 0.000 0.000 0.000 construction.py:596(_homogenize)
197708 0.171 0.000 0.324 0.000 construction.py:627(_sanitize_ndim)
2 0.000 0.000 0.000 0.000 construction.py:635(_extract_index)
197708 0.102 0.000 0.131 0.000 construction.py:664(_sanitize_str_dtypes)
197708 0.098 0.000 0.118 0.000 construction.py:684(_maybe_repeat)
197708 0.420 0.000 0.744 0.000 construction.py:695(_try_cast)
1 0.000 0.000 0.004 0.004 construction.py:798(to_arrays)
174608 0.152 0.000 0.225 0.000 construction.py:802(is_empty_data)
1 0.000 0.000 0.002 0.002 construction.py:934(_list_of_dict_to_arrays)
2205 0.001 0.000 0.001 0.000 construction.py:958(<genexpr>)
2 0.000 0.000 0.000 0.000 construction.py:959(<genexpr>)
1 0.000 0.000 0.000 0.000 construction.py:965(<listcomp>)
1 0.000 0.000 0.001 0.001 construction.py:971(_finalize_columns_and_data)
1 0.000 0.000 0.000 0.000 construction.py:993(_validate_or_indexify_columns)
124762 0.043 0.000 0.043 0.000 contextlib.py:420(__init__)
124762 0.016 0.000 0.016 0.000 contextlib.py:423(__enter__)
124762 0.026 0.000 0.026 0.000 contextlib.py:426(__exit__)
1 0.000 0.000 0.000 0.000 dataclasses.py:1211(is_dataclass)
122606 0.070 0.000 0.223 0.000 dispatch.py:11(should_extension_dispatch)
12 0.000 0.000 0.000 0.000 dtypes.py:1144(construct_from_string)
5 0.000 0.000 0.000 0.000 dtypes.py:1206(is_dtype)
92328 0.063 0.000 2.445 0.000 dtypes.py:182(__init__)
23082 0.061 0.000 0.226 0.000 dtypes.py:205(_from_values_or_dtype)
12 0.000 0.000 0.000 0.000 dtypes.py:300(construct_from_string)
92328 0.116 0.000 2.382 0.000 dtypes.py:331(_finalize)
92328 0.037 0.000 0.053 0.000 dtypes.py:485(validate_ordered)
46164 0.227 0.000 2.213 0.000 dtypes.py:504(validate_categories)
23082 0.078 0.000 0.383 0.000 dtypes.py:541(update_dtype)
115410 0.020 0.000 0.020 0.000 dtypes.py:574(categories)
69246 0.012 0.000 0.012 0.000 dtypes.py:581(ordered)
12 0.000 0.000 0.000 0.000 dtypes.py:732(construct_from_string)
12 0.000 0.000 0.000 0.000 dtypes.py:891(construct_from_string)
4 0.000 0.000 0.000 0.000 enum.py:359(__call__)
4 0.000 0.000 0.000 0.000 enum.py:678(__new__)
46181 0.018 0.000 0.018 0.000 enum.py:801(value)
2 0.000 0.000 0.000 0.000 enum.py:986(__and__)
35776 0.036 0.000 0.321 0.000 expressions.py:223(evaluate)
35776 0.024 0.000 0.285 0.000 expressions.py:63(_evaluate_standard)
465690 0.382 0.000 0.382 0.000 flags.py:47(__init__)
427954 0.098 0.000 0.098 0.000 flags.py:51(allows_duplicate_labels)
427953 0.356 0.000 0.356 0.000 flags.py:83(allows_duplicate_labels)
2204 0.005 0.000 0.550 0.000 frame.py:10808(values)
7 0.000 0.000 0.000 0.000 frame.py:10986(_reindex_for_setitem)
6102 0.025 0.000 0.918 0.000 frame.py:1279(iterrows)
9337 0.163 0.000 13.478 0.001 frame.py:1327(itertuples)
130197 0.192 0.000 10.498 0.000 frame.py:1400(<genexpr>)
33867 0.025 0.000 0.056 0.000 frame.py:1413(__len__)
217071 0.697 0.000 11.485 0.000 frame.py:3411(_ixs)
189514 0.854 0.000 29.287 0.000 frame.py:3463(__getitem__)
65321 0.302 0.000 24.324 0.000 frame.py:3530(_getitem_bool_array)
3898 0.021 0.000 0.044 0.000 frame.py:3592(_get_value)
11 0.000 0.000 0.005 0.000 frame.py:3630(__setitem__)
7 0.000 0.000 0.002 0.000 frame.py:3790(_iset_item_mgr)
11 0.000 0.000 0.004 0.000 frame.py:3797(_set_item_mgr)
11 0.000 0.000 0.004 0.000 frame.py:3822(_set_item)
163264 0.350 0.000 3.361 0.000 frame.py:3847(_set_value)
11 0.000 0.000 0.000 0.000 frame.py:3883(_ensure_valid_index)
183234 0.430 0.000 2.567 0.000 frame.py:3906(_box_col_values)
14 0.000 0.000 0.000 0.000 frame.py:3920(_clear_item_cache)
291355 0.343 0.000 2.556 0.000 frame.py:3923(_get_item_cache)
11 0.000 0.000 0.001 0.000 frame.py:4515(_sanitize_column)
1 0.000 0.000 0.004 0.004 frame.py:4806(drop)
1 0.000 0.000 0.027 0.027 frame.py:4964(rename)
2 0.000 0.000 0.038 0.019 frame.py:5272(replace)
107838 0.025 0.000 0.025 0.000 frame.py:578(_constructor)
107841 0.192 0.000 0.652 0.000 frame.py:587(__init__)
11541 0.187 0.000 15.131 0.001 frame.py:6269(sort_values)
11541 0.032 0.000 1.757 0.000 frame.py:6295(<listcomp>)
7 0.000 0.000 0.002 0.000 frame.py:7595(groupby)
182651 0.101 0.000 0.101 0.000 frame.py:804(axes)
8 0.000 0.000 0.000 0.000 frame.py:821(shape)
6 0.000 0.000 0.000 0.000 fromnumeric.py:1008(_argsort_dispatcher)
6 0.000 0.000 0.000 0.000 fromnumeric.py:1012(argsort)
8 0.000 0.000 0.000 0.000 fromnumeric.py:1751(_ravel_dispatcher)
8 0.000 0.000 0.000 0.000 fromnumeric.py:1755(ravel)
11543 0.004 0.000 0.004 0.000 fromnumeric.py:2965(_prod_dispatcher)
11543 0.037 0.000 0.224 0.000 fromnumeric.py:2970(prod)
6 0.000 0.000 0.000 0.000 fromnumeric.py:51(_wrapfunc)
11543 0.060 0.000 0.187 0.000 fromnumeric.py:69(_wrapreduction)
11543 0.011 0.000 0.011 0.000 fromnumeric.py:70(<dictcomp>)
3 0.000 0.000 0.000 0.000 frozen.py:67(__getitem__)
65328 0.037 0.000 0.037 0.000 function.py:49(__call__)
3 0.000 0.000 0.000 0.000 function_base.py:4954(_delete_dispatcher)
3 0.002 0.001 0.002 0.001 function_base.py:4958(delete)
4 0.000 0.000 0.000 0.000 function_base.py:5139(_insert_dispatcher)
4 0.000 0.000 0.000 0.000 function_base.py:5143(insert)
8 0.000 0.000 0.000 0.000 function_base.py:5333(_append_dispatcher)
8 0.000 0.000 0.000 0.000 function_base.py:5337(append)
23082 0.072 0.000 0.204 0.000 generic.py:1697(_is_label_reference)
46164 0.012 0.000 0.012 0.000 generic.py:1719(<genexpr>)
46164 0.043 0.000 0.101 0.000 generic.py:1724(<genexpr>)
23089 0.075 0.000 0.134 0.000 generic.py:1752(_check_label_or_level_ambiguity)
23089 0.005 0.000 0.005 0.000 generic.py:1772(<genexpr>)
23082 0.158 0.000 1.725 0.000 generic.py:1796(_get_label_or_level_values)
23082 0.014 0.000 0.014 0.000 generic.py:1832(<listcomp>)
7 0.000 0.000 0.000 0.000 generic.py:1991(__contains__)
30441 0.052 0.000 0.227 0.000 generic.py:1996(empty)
78219 0.054 0.000 0.150 0.000 generic.py:2054(<genexpr>)
465690 1.206 0.000 1.588 0.000 generic.py:239(__init__)
427954 0.172 0.000 0.172 0.000 generic.py:328(attrs)
855907 0.181 0.000 0.181 0.000 generic.py:349(flags)
65328 0.460 0.000 19.477 0.000 generic.py:3609(take)
65321 0.242 0.000 20.965 0.000 generic.py:3708(_take_with_is_copy)
23082 0.050 0.000 1.147 0.000 generic.py:3722(xs)
99158 0.100 0.000 0.189 0.000 generic.py:3925(_set_is_copy)
11 0.000 0.000 0.000 0.000 generic.py:3948(_check_setitem_copy)
1 0.000 0.000 0.000 0.000 generic.py:4060(_check_inplace_and_allows_duplicate_labels)
1 0.000 0.000 0.004 0.004 generic.py:4238(drop)
1 0.000 0.000 0.004 0.004 generic.py:4274(_drop_axis)
4625304 1.327 0.000 1.868 0.000 generic.py:43(_check)
33837 0.042 0.000 0.091 0.000 generic.py:441(_validate_dtype)
790409 0.269 0.000 0.269 0.000 generic.py:546(_get_axis_number)
427953 1.794 0.000 3.179 0.000 generic.py:5517(__finalize__)
2 0.000 0.000 0.000 0.000 generic.py:554(_get_axis_name)
4 0.000 0.000 0.000 0.000 generic.py:5549(<genexpr>)
7 0.000 0.000 0.000 0.000 generic.py:5554(<genexpr>)
499712 0.801 0.000 5.838 0.000 generic.py:5561(__getattr__)
709523 1.107 0.000 2.763 0.000 generic.py:5577(__setattr__)
609638 0.494 0.000 0.691 0.000 generic.py:560(_get_axis)
67534 0.118 0.000 0.660 0.000 generic.py:5632(_protect_consolidate)
67534 0.085 0.000 0.745 0.000 generic.py:5646(_consolidate_inplace)
67534 0.079 0.000 0.506 0.000 generic.py:5650(f)
76875 0.088 0.000 0.133 0.000 generic.py:566(_get_block_manager_axis)
7 0.000 0.000 0.019 0.003 generic.py:5749(astype)
1 0.000 0.000 0.026 0.026 generic.py:5926(copy)
194477 0.100 0.000 0.196 0.000 generic.py:636(_info_axis)
2 0.000 0.000 0.038 0.019 generic.py:6555(replace)
295840 0.094 0.000 0.094 0.000 generic.py:660(ndim)
2 0.000 0.000 0.000 0.000 generic.py:683(size)
1 0.000 0.000 0.000 0.000 generic.py:757(_set_axis_nocheck)
1 0.000 0.000 0.000 0.000 generic.py:767(_set_axis)
1 0.000 0.000 0.027 0.027 generic.py:985(_rename)
7 0.000 0.000 0.000 0.000 groupby.py:675(_selected_obj)
7 0.000 0.000 0.000 0.000 groupby.py:751(__iter__)
7 0.000 0.000 0.002 0.000 groupby.py:839(__init__)
7 0.000 0.000 0.000 0.000 groupby.py:898(__getattr__)
70/35 0.000 0.000 0.000 0.000 groupby.py:908(__getattribute__)
7 0.000 0.000 0.000 0.000 grouper.py:468(__init__)
7 0.000 0.000 0.000 0.000 grouper.py:570(name)
7 0.000 0.000 0.000 0.000 grouper.py:588(_ilevel)
7 0.000 0.000 0.043 0.006 grouper.py:616(codes)
7 0.000 0.000 0.002 0.000 grouper.py:650(group_index)
7 0.000 0.000 0.043 0.006 grouper.py:659(_codes_and_uniques)
7 0.000 0.000 0.002 0.000 grouper.py:700(get_grouper)
14 0.000 0.000 0.000 0.000 grouper.py:802(<genexpr>)
14 0.000 0.000 0.000 0.000 grouper.py:803(<genexpr>)
14 0.000 0.000 0.000 0.000 grouper.py:804(<genexpr>)
7 0.000 0.000 0.000 0.000 grouper.py:838(is_in_axis)
7 0.000 0.000 0.000 0.000 grouper.py:851(is_in_obj)
7 0.000 0.000 0.000 0.000 grouper.py:921(_is_label_like)
7 0.000 0.000 0.000 0.000 grouper.py:925(_convert_grouper)
3902 0.001 0.000 0.001 0.000 indexing.py:1020(_has_valid_setitem_indexer)
3898 0.029 0.000 0.050 0.000 indexing.py:1023(_is_scalar_access)
7804 0.021 0.000 0.061 0.000 indexing.py:1223(_convert_to_indexer)
158599 0.079 0.000 0.079 0.000 indexing.py:130(iloc)
241720 0.249 0.000 1.446 0.000 indexing.py:1343(_validate_key)
120860 0.235 0.000 0.409 0.000 indexing.py:1419(_is_scalar_access)
241720 0.063 0.000 0.081 0.000 indexing.py:1432(<genexpr>)
275557 0.269 0.000 0.790 0.000 indexing.py:1434(_validate_integer)
120860 0.308 0.000 8.409 0.000 indexing.py:1456(_getitem_tuple)
154697 0.564 0.000 11.310 0.000 indexing.py:1487(_getitem_axis)
3906/3902 0.033 0.000 0.510 0.000 indexing.py:1553(_setitem_with_indexer)
3902 0.030 0.000 0.463 0.000 indexing.py:1692(_setitem_with_indexer_split_path)
3902 0.027 0.000 0.397 0.000 indexing.py:1848(_setitem_single_column)
3902 0.003 0.000 0.003 0.000 indexing.py:2023(_ensure_iterable_column_indexer)
163264 0.609 0.000 4.384 0.000 indexing.py:2223(__setitem__)
489792 0.196 0.000 0.315 0.000 indexing.py:2225(<genexpr>)
163264 0.048 0.000 0.048 0.000 indexing.py:2243(_convert_key)
163264 0.185 0.000 0.210 0.000 indexing.py:2256(_axes_are_unique)
163264 0.319 0.000 4.962 0.000 indexing.py:2272(__setitem__)
65332 0.094 0.000 0.109 0.000 indexing.py:2318(convert_to_index_sliceable)
65321 0.164 0.000 2.567 0.000 indexing.py:2352(check_bool_indexer)
4 0.000 0.000 0.000 0.000 indexing.py:2399(convert_missing_indexer)
4 0.000 0.000 0.000 0.000 indexing.py:2416(convert_from_missing_indexer_tuple)
8 0.000 0.000 0.000 0.000 indexing.py:2421(get_indexer)
12 0.000 0.000 0.000 0.000 indexing.py:2424(<genexpr>)
4 0.000 0.000 0.000 0.000 indexing.py:2437(is_nested_tuple)
241720 0.120 0.000 0.234 0.000 indexing.py:2454(is_label_like)
453173 0.492 0.000 1.115 0.000 indexing.py:2481(check_deprecated_indexers)
385980 0.102 0.000 0.129 0.000 indexing.py:2486(<genexpr>)
385980 0.083 0.000 0.106 0.000 indexing.py:2497(<genexpr>)
7800 0.005 0.000 0.005 0.000 indexing.py:267(loc)
163264 0.062 0.000 0.062 0.000 indexing.py:527(at)
3902 0.032 0.000 0.157 0.000 indexing.py:638(_get_setitem_indexer)
3902 0.013 0.000 0.023 0.000 indexing.py:668(_ensure_listlike_indexer)
3902 0.029 0.000 0.735 0.000 indexing.py:705(__setitem__)
11706 0.004 0.000 0.005 0.000 indexing.py:708(<genexpr>)
11706 0.005 0.000 0.008 0.000 indexing.py:709(<genexpr>)
120860 0.061 0.000 0.190 0.000 indexing.py:740(_expand_ellipsis)
362580 0.060 0.000 0.060 0.000 indexing.py:745(<genexpr>)
120860 0.248 0.000 1.949 0.000 indexing.py:761(_validate_tuple_indexer)
120860 0.123 0.000 0.409 0.000 indexing.py:777(_is_nested_tuple_indexer)
362580 0.106 0.000 0.145 0.000 indexing.py:783(<genexpr>)
3902 0.017 0.000 0.082 0.000 indexing.py:787(_convert_tuple)
245622 0.101 0.000 0.129 0.000 indexing.py:804(_validate_key_length)
120860 0.648 0.000 6.071 0.000 indexing.py:834(_getitem_lowerdim)
158595 0.557 0.000 17.445 0.000 indexing.py:954(__getitem__)
374274 0.106 0.000 0.143 0.000 indexing.py:957(<genexpr>)
374274 0.161 0.000 0.260 0.000 indexing.py:958(<genexpr>)
2 0.000 0.000 0.000 0.000 inference.py:133(is_re)
862785 0.369 0.000 1.018 0.000 inference.py:184(is_array_like)
11 0.000 0.000 0.000 0.000 inference.py:262(is_dict_like)
30 0.000 0.000 0.000 0.000 inference.py:288(<genexpr>)
1 0.000 0.000 0.000 0.000 inference.py:294(is_named_tuple)
876325 0.356 0.000 0.560 0.000 inference.py:321(is_hashable)
11541 0.019 0.000 0.031 0.000 inference.py:359(is_sequence)
1 0.000 0.000 0.000 0.000 inference.py:390(is_dataclass)
7 0.000 0.000 0.000 0.000 inspect.py:191(isclass)
35780 0.028 0.000 0.055 0.000 integer.py:113(safe_cast)
35780 0.256 0.000 1.525 0.000 integer.py:131(coerce_to_array)
141108 0.517 0.000 2.061 0.000 integer.py:309(dtype)
141112 0.283 0.000 0.535 0.000 integer.py:313(__init__)
4 0.000 0.000 0.017 0.004 integer.py:321(_from_sequence)
35776 0.041 0.000 1.549 0.000 integer.py:335(_coerce_to_array)
8816 0.024 0.000 0.206 0.000 integer.py:350(astype)
4 0.000 0.000 0.000 0.000 integer.py:53(__repr__)
4 0.000 0.000 0.000 0.000 integer.py:61(is_unsigned_integer)
4 0.000 0.000 0.000 0.000 integer.py:69(construct_array_type)
26704 0.046 0.000 0.376 0.000 integer.py:80(_get_common_dtype)
80112 0.096 0.000 0.309 0.000 integer.py:82(<genexpr>)
4 0.000 0.000 0.000 0.000 invalid.py:9(invalid_comparison)
183234 0.794 0.000 1.252 0.000 managers.py:1016(iget)
7 0.000 0.000 0.002 0.000 managers.py:1061(iset)
1 0.000 0.000 0.000 0.000 managers.py:1118(value_getitem)
6 0.000 0.000 0.000 0.000 managers.py:1196(_iset_single)
4 0.000 0.000 0.001 0.000 managers.py:1219(insert)
22 0.000 0.000 0.000 0.000 managers.py:1257(<genexpr>)
4 0.000 0.000 0.000 0.000 managers.py:1267(_insert_update_mgr_locs)
4 0.000 0.000 0.000 0.000 managers.py:1277(_insert_update_blklocs_and_blknos)
2204 0.010 0.000 0.511 0.000 managers.py:1541(as_array)
260121 0.091 0.000 0.091 0.000 managers.py:156(blknos)
2204 0.087 0.000 0.497 0.000 managers.py:1601(_interleave)
2204 0.008 0.000 0.011 0.000 managers.py:1615(<listcomp>)
67544 0.063 0.000 0.296 0.000 managers.py:1665(is_consolidated)
33182 0.096 0.000 0.233 0.000 managers.py:1673(_consolidate_check)
33182 0.109 0.000 0.126 0.000 managers.py:1679(<listcomp>)
10 0.003 0.000 0.043 0.004 managers.py:1683(_consolidate_inplace)
361751 0.296 0.000 0.296 0.000 managers.py:1700(__init__)
260114 0.070 0.000 0.070 0.000 managers.py:172(blklocs)
3909 0.008 0.000 0.012 0.000 managers.py:1722(from_blocks)
174608 0.307 0.000 2.383 0.000 managers.py:1731(from_array)
357842 0.091 0.000 0.091 0.000 managers.py:1792(_block)
457247 0.312 0.000 0.361 0.000 managers.py:1837(dtype)
719890 0.536 0.000 0.606 0.000 managers.py:1848(internal_values)
3 0.000 0.000 0.001 0.000 managers.py:1937(create_block_manager_from_column_arrays)
9 0.000 0.000 0.000 0.000 managers.py:1992(_grouping_func)
3 0.000 0.000 0.000 0.000 managers.py:2008(_form_blocks)
3 0.000 0.000 0.000 0.000 managers.py:2060(_stack_arrays)
6 0.000 0.000 0.040 0.007 managers.py:2074(_consolidate)
82 0.000 0.000 0.000 0.000 managers.py:2079(<lambda>)
13 0.026 0.002 0.039 0.003 managers.py:2091(_merge_blocks)
6 0.000 0.000 0.000 0.000 managers.py:2102(<listcomp>)
6 0.000 0.000 0.000 0.000 managers.py:2111(<listcomp>)
1 0.000 0.000 0.000 0.000 managers.py:212(set_axis)
4 0.000 0.000 0.000 0.000 managers.py:2128(_fast_count_smallints)
2 0.000 0.000 0.000 0.000 managers.py:2137(_preprocess_slice_or_indexer)
6116 0.005 0.000 0.006 0.000 managers.py:217(is_single_block)
99165 0.033 0.000 0.033 0.000 managers.py:222(items)
163260 0.101 0.000 0.159 0.000 managers.py:230(arrays)
163260 0.058 0.000 0.058 0.000 managers.py:239(<listcomp>)
3912 0.027 0.000 0.230 0.000 managers.py:253(apply)
3912 0.001 0.000 0.001 0.000 managers.py:282(<dictcomp>)
3902 0.008 0.000 0.178 0.000 managers.py:331(setitem)
7 0.000 0.000 0.019 0.003 managers.py:418(astype)
2 0.000 0.000 0.037 0.019 managers.py:436(replace)
1 0.000 0.000 0.026 0.026 managers.py:578(copy)
2 0.000 0.000 0.000 0.000 managers.py:596(copy_func)
1 0.000 0.000 0.000 0.000 managers.py:599(<listcomp>)
67534 0.050 0.000 0.367 0.000 managers.py:618(consolidate)
76871 0.407 0.000 15.666 0.000 managers.py:634(reindex_indexer)
76869 0.454 0.000 14.833 0.000 managers.py:692(<listcomp>)
2 0.000 0.000 0.004 0.002 managers.py:713(_slice_take_blocks_ax0)
1 0.000 0.000 0.000 0.000 managers.py:849(_make_na_block)
76869 0.449 0.000 19.674 0.000 managers.py:875(take)
107846 0.041 0.000 0.041 0.000 managers.py:919(__init__)
3 0.000 0.000 0.000 0.000 managers.py:960(_verify_integrity)
13 0.000 0.000 0.000 0.000 managers.py:962(<genexpr>)
76874 0.159 0.000 0.188 0.000 managers.py:973(from_blocks)
33837 0.782 0.000 3.225 0.000 managers.py:983(fast_xs)
33837 0.135 0.000 0.173 0.000 managers.py:998(<listcomp>)
7 0.000 0.000 0.000 0.000 masked.py:103(kind)
4 0.000 0.000 0.000 0.000 masked.py:107(itemsize)
141116 0.223 0.000 0.236 0.000 masked.py:141(__init__)
92840 0.168 0.000 0.525 0.000 masked.py:170(__getitem__)
35776 0.131 0.000 1.798 0.000 masked.py:220(__setitem__)
80368 0.078 0.000 0.091 0.000 masked.py:234(__iter__)
26459 0.011 0.000 0.015 0.000 masked.py:245(__len__)
4 0.000 0.000 0.000 0.000 masked.py:248(shape)
8830 0.004 0.000 0.004 0.000 masked.py:252(ndim)
8820 0.040 0.000 0.107 0.000 masked.py:284(to_numpy)
8820 0.005 0.000 0.046 0.000 masked.py:504(_hasna)
4 0.000 0.000 0.001 0.000 masked.py:513(_cmp_method)
101664 0.365 0.000 6.300 0.000 masked.py:621(take)
12 0.000 0.000 0.001 0.000 masked.py:678(copy)
7 0.000 0.000 0.000 0.000 masked.py:98(numpy_dtype)
5 0.000 0.000 0.000 0.000 missing.py:107(clean_fill_method)
35776 0.045 0.000 0.045 0.000 missing.py:138(dispatch_fill_zeros)
294072 0.228 0.000 0.451 0.000 missing.py:149(_isna)
6 0.000 0.000 0.000 0.000 missing.py:226(_isna_array)
6 0.000 0.000 0.000 0.000 missing.py:267(_isna_string_dtype)
101664 0.080 0.000 0.263 0.000 missing.py:287(notna)
65332 0.098 0.000 0.116 0.000 missing.py:390(array_equivalent)
3 0.000 0.000 0.000 0.000 missing.py:494(_array_equivalent_object)
4 0.000 0.000 0.000 0.000 missing.py:542(infer_fill_value)
133272 0.191 0.000 0.927 0.000 missing.py:571(na_value_for_dtype)
6 0.023 0.004 0.025 0.004 missing.py:61(mask_missing)
7 0.000 0.000 0.000 0.000 missing.py:625(is_valid_na_for_dtype)
294072 0.123 0.000 0.574 0.000 missing.py:66(isna)
5 0.000 0.000 0.000 0.000 missing.py:911(clean_reindex_fill_method)
69 0.000 0.000 0.000 0.000 multiarray.py:1071(copyto)
11542 0.004 0.000 0.004 0.000 multiarray.py:1106(putmask)
25 0.000 0.000 0.000 0.000 multiarray.py:148(concatenate)
23082 0.007 0.000 0.007 0.000 multiarray.py:341(where)
2 0.000 0.000 0.000 0.000 multiarray.py:498(can_cast)
4 0.000 0.000 0.000 0.000 multiarray.py:883(bincount)
4929 0.039 0.000 2.540 0.001 normalize.py:102(missing_cdna)
1 0.007 0.007 0.736 0.736 normalize.py:136(df_infer_missing_genes)
1388 0.010 0.000 0.667 0.000 normalize.py:141(missing_gene)
1 0.403 0.403 20.709 20.709 normalize.py:171(df_exon_offset_transcript)
4929 0.045 0.000 3.868 0.001 normalize.py:175(get_transcript)
1 0.682 0.682 42.505 42.505 normalize.py:215(df_cds_offset_transcript)
17888 0.303 0.000 26.358 0.001 normalize.py:219(get_exon)
1 0.319 0.319 14.827 14.827 normalize.py:254(df_cds_offset_cdna)
1 0.008 0.008 100.177 100.177 normalize.py:26(normalize_df)
1 0.177 0.177 9.781 9.781 normalize.py:310(df_set_protein_id)
4929 0.042 0.000 5.128 0.001 normalize.py:314(select)
1 0.006 0.006 0.047 0.047 normalize.py:43(df_normalize_cols)
1 0.021 0.021 2.539 2.539 normalize.py:60(df_infer_transcripts)
4929 0.035 0.000 2.350 0.000 normalize.py:65(missing_transcript)
1 0.157 0.157 8.974 8.974 normalize.py:97(df_infer_cdna)
8 0.000 0.000 0.000 0.000 numeric.py:1341(normalize_axis_tuple)
23082 0.086 0.000 0.173 0.000 numeric.py:139(_ensure_array)
8 0.000 0.000 0.000 0.000 numeric.py:1391(<listcomp>)
4 0.000 0.000 0.000 0.000 numeric.py:1400(_moveaxis_dispatcher)
4 0.000 0.000 0.000 0.000 numeric.py:1404(moveaxis)
4 0.000 0.000 0.000 0.000 numeric.py:1466(<listcomp>)
4 0.000 0.000 0.000 0.000 numeric.py:149(ones)
23082 0.009 0.000 0.009 0.000 numeric.py:188(_validate_dtype)
23082 0.013 0.000 0.013 0.000 numeric.py:199(_ensure_dtype)
65 0.000 0.000 0.001 0.000 numeric.py:289(full)
136873 0.026 0.000 0.026 0.000 numeric.py:331(_is_all_dates)
23082 0.018 0.000 0.073 0.000 numeric.py:99(_can_hold_na)
534806 0.296 0.000 0.428 0.000 numerictypes.py:282(issubclass_)
267403 0.322 0.000 0.775 0.000 numerictypes.py:356(issubdtype)
47208 0.446 0.000 0.660 0.000 numerictypes.py:573(_can_coerce_all)
448476 0.174 0.000 0.174 0.000 numerictypes.py:582(<listcomp>)
23604 0.069 0.000 0.761 0.000 numerictypes.py:597(find_common_type)
23604 0.028 0.000 0.028 0.000 numerictypes.py:649(<listcomp>)
23604 0.005 0.000 0.005 0.000 numerictypes.py:650(<listcomp>)
7 0.000 0.000 0.000 0.000 ops.py:1198(__init__)
7 0.000 0.000 0.002 0.000 ops.py:1212(slabels)
7 0.000 0.000 0.002 0.000 ops.py:1217(_sort_idx)
30969 0.082 0.000 1.333 0.000 ops.py:1222(__iter__)
7 0.000 0.000 0.071 0.010 ops.py:1235(sorted_data)
30962 0.096 0.000 1.178 0.000 ops.py:1252(_chop)
7 0.000 0.000 0.000 0.000 ops.py:1263(get_splitter)
7 0.000 0.000 0.000 0.000 ops.py:660(__init__)
28 0.000 0.000 0.000 0.000 ops.py:680(groupings)
30969 0.098 0.000 1.666 0.000 ops.py:695(get_iterator)
7 0.000 0.000 0.044 0.006 ops.py:711(_get_splitter)
7 0.000 0.000 0.000 0.000 ops.py:732(group_keys_seq)
7 0.000 0.000 0.000 0.000 ops.py:795(levels)
7 0.000 0.000 0.000 0.000 ops.py:797(<listcomp>)
7 0.000 0.000 0.044 0.006 ops.py:832(group_info)
7 0.000 0.000 0.044 0.006 ops.py:854(_get_compressed_codes)
1 0.000 0.000 0.003 0.003 putmask.py:27(putmask_inplace)
4 0.000 0.000 0.000 0.000 range.py:167(_simple_new)
3 0.000 0.000 0.000 0.000 range.py:183(_constructor)
3 0.000 0.000 0.000 0.000 range.py:189(_data)
3 0.000 0.000 0.000 0.000 range.py:241(start)
3 0.000 0.000 0.000 0.000 range.py:264(stop)
3 0.000 0.000 0.000 0.000 range.py:287(step)
3 0.000 0.000 0.000 0.000 range.py:347(dtype)
167162 0.026 0.000 0.026 0.000 range.py:351(is_unique)
3902 0.001 0.000 0.001 0.000 range.py:372(inferred_type)
171060 0.167 0.000 0.257 0.000 range.py:379(get_loc)
12 0.000 0.000 0.000 0.000 range.py:522(equals)
3968 0.003 0.000 0.004 0.000 range.py:909(__len__)
46181 0.026 0.000 0.189 0.000 re.py:249(compile)
46181 0.100 0.000 0.163 0.000 re.py:288(_compile)
2 0.000 0.000 0.000 0.000 replace.py:30(should_use_regex)
93358 0.139 0.000 0.788 0.000 series.py:1052(_get_value)
183234 0.153 0.000 0.503 0.000 series.py:1238(_set_as_cached)
122606 0.415 0.000 10.345 0.000 series.py:2988(_construct_result)
357849 1.884 0.000 13.038 0.000 series.py:323(__init__)
14267 0.078 0.000 2.891 0.000 series.py:5068(isin)
136880 0.026 0.000 0.026 0.000 series.py:523(_constructor)
174608 0.135 0.000 0.161 0.000 series.py:542(_set_axis)
86830 0.645 0.000 13.066 0.000 series.py:5613(_cmp_method)
35776 0.160 0.000 4.573 0.000 series.py:5627(_logical_method)
457247 0.191 0.000 0.552 0.000 series.py:575(dtype)
735594 0.432 0.000 0.633 0.000 series.py:590(name)
434101 0.507 0.000 1.536 0.000 series.py:640(name)
719890 0.311 0.000 0.917 0.000 series.py:687(_values)
65321 0.031 0.000 0.202 0.000 series.py:743(__len__)
65321 0.060 0.000 0.136 0.000 series.py:825(__array__)
93358 0.245 0.000 1.234 0.000 series.py:943(__getitem__)
5 0.000 0.000 0.000 0.000 shape_base.py:19(_atleast_1d_dispatcher)
6 0.000 0.000 0.000 0.000 shape_base.py:207(_arrays_for_stack_dispatcher)
6 0.000 0.000 0.000 0.000 shape_base.py:218(_vhstack_dispatcher)
6 0.000 0.000 0.013 0.002 shape_base.py:222(vstack)
5 0.000 0.000 0.000 0.000 shape_base.py:23(atleast_1d)
6 0.000 0.000 0.000 0.000 shape_base.py:77(_atleast_2d_dispatcher)
6 0.000 0.000 0.000 0.000 shape_base.py:81(atleast_2d)
11541 0.305 0.000 0.803 0.000 sorting.py:100(get_group_index)
11541 0.026 0.000 0.028 0.000 sorting.py:135(_int64_cut_off)
23082 0.069 0.000 0.132 0.000 sorting.py:143(maybe_lift)
11541 0.016 0.000 0.064 0.000 sorting.py:148(<listcomp>)
11541 0.052 0.000 1.597 0.000 sorting.py:271(indexer_from_factorized)
11541 0.617 0.000 10.565 0.001 sorting.py:285(lexsort_indexer)
11541 0.019 0.000 0.063 0.000 sorting.py:321(<listcomp>)
23082 0.044 0.000 0.044 0.000 sorting.py:524(ensure_key_mapped)
11548 0.121 0.000 0.238 0.000 sorting.py:618(get_group_index_sorter)
11541 0.072 0.000 0.504 0.000 sorting.py:661(compress_group_index)
11541 0.099 0.000 0.269 0.000 sorting.py:683(_reorder_by_uniques)
2 0.000 0.000 0.000 0.000 sre_compile.py:447(_simple)
4 0.000 0.000 0.000 0.000 sre_compile.py:477(_get_iscased)
2 0.000 0.000 0.000 0.000 sre_compile.py:485(_get_literal_prefix)
2 0.000 0.000 0.000 0.000 sre_compile.py:516(_get_charset_prefix)
2 0.000 0.000 0.000 0.000 sre_compile.py:560(_compile_info)
4 0.000 0.000 0.000 0.000 sre_compile.py:619(isstring)
2 0.000 0.000 0.000 0.000 sre_compile.py:622(_code)
2 0.000 0.000 0.000 0.000 sre_compile.py:783(compile)
4/2 0.000 0.000 0.000 0.000 sre_compile.py:87(_compile)
4 0.000 0.000 0.000 0.000 sre_parse.py:112(__init__)
8 0.000 0.000 0.000 0.000 sre_parse.py:161(__len__)
38 0.000 0.000 0.000 0.000 sre_parse.py:165(__getitem__)
2 0.000 0.000 0.000 0.000 sre_parse.py:169(__setitem__)
24 0.000 0.000 0.000 0.000 sre_parse.py:173(append)
4/2 0.000 0.000 0.000 0.000 sre_parse.py:175(getwidth)
2 0.000 0.000 0.000 0.000 sre_parse.py:225(__init__)
28 0.000 0.000 0.000 0.000 sre_parse.py:234(__next)
4 0.000 0.000 0.000 0.000 sre_parse.py:250(match)
26 0.000 0.000 0.000 0.000 sre_parse.py:255(get)
4 0.000 0.000 0.000 0.000 sre_parse.py:287(tell)
2 0.000 0.000 0.000 0.000 sre_parse.py:436(_parse_sub)
2 0.000 0.000 0.000 0.000 sre_parse.py:494(_parse)
2 0.000 0.000 0.000 0.000 sre_parse.py:76(__init__)
4 0.000 0.000 0.000 0.000 sre_parse.py:82(groups)
2 0.000 0.000 0.000 0.000 sre_parse.py:928(fix_flags)
2 0.000 0.000 0.000 0.000 sre_parse.py:944(parse)
380161 1.565 0.000 5.430 0.000 take.py:120(_take_nd_ndarray)
3 0.000 0.000 0.000 0.000 take.py:288(_get_take_nd_function_cached)
380161 0.287 0.000 0.287 0.000 take.py:326(_get_take_nd_function)
101664 0.134 0.000 0.668 0.000 take.py:350(wrapper)
380161 0.817 0.000 1.498 0.000 take.py:554(_take_preprocess_indexer_and_fill_value)
380161 0.780 0.000 6.396 0.000 take.py:57(take_nd)
46181 0.041 0.000 0.060 0.000 types.py:176(__get__)
2 0.000 0.000 0.000 0.000 typing.py:1154(__subclasscheck__)
411683 0.066 0.000 0.066 0.000 typing.py:1737(cast)
2 0.000 0.000 0.000 0.000 typing.py:993(__instancecheck__)
7804 0.003 0.000 0.004 0.000 utils.py:103(<genexpr>)
3902 0.005 0.000 0.010 0.000 utils.py:107(is_empty_indexer)
3902 0.005 0.000 0.006 0.000 utils.py:133(check_setitem_lengths)
203328 0.339 0.000 1.483 0.000 utils.py:197(validate_indices)
76869 0.933 0.000 1.702 0.000 utils.py:249(maybe_convert_indices)
9/1 0.011 0.001 100.178 100.178 utils.py:29(timeit_wrapper)
3902 0.008 0.000 0.022 0.000 utils.py:321(length_of_indexer)
193937 0.600 0.000 1.923 0.000 utils.py:457(check_array_indexer)
287271 0.092 0.000 0.204 0.000 utils.py:69(is_list_like_indexer)
3902 0.007 0.000 0.015 0.000 utils.py:85(is_scalar_indexer)
46181 0.206 0.000 0.612 0.000 warnings.py:130(filterwarnings)
46181 0.105 0.000 0.194 0.000 warnings.py:181(_add_filter)
46181 0.060 0.000 0.060 0.000 warnings.py:437(__init__)
46181 0.108 0.000 0.121 0.000 warnings.py:458(__enter__)
46181 0.065 0.000 0.073 0.000 warnings.py:477(__exit__)
196500 0.081 0.000 0.081 0.000 {built-in method __new__ of type object at 0x556c0475d9a0}
20 0.000 0.000 0.000 0.000 {built-in method _abc._abc_instancecheck}
19/6 0.000 0.000 0.000 0.000 {built-in method _abc._abc_subclasscheck}
35776 0.109 0.000 0.109 0.000 {built-in method _operator.and_}
17888 0.114 0.000 0.114 0.000 {built-in method _operator.ge}
8 0.000 0.000 0.000 0.000 {built-in method _operator.index}
17888 0.147 0.000 0.147 0.000 {built-in method _operator.le}
2 0.000 0.000 0.000 0.000 {built-in method _sre.compile}
24 0.000 0.000 0.000 0.000 {built-in method _sre.unicode_iscased}
22 0.000 0.000 0.000 0.000 {built-in method _sre.unicode_tolower}
138543 0.028 0.000 0.028 0.000 {built-in method _warnings._filters_mutated}
604278 0.288 0.000 1.188 0.000 {built-in method builtins.all}
597968 0.388 0.000 1.192 0.000 {built-in method builtins.any}
904519 0.116 0.000 0.116 0.000 {built-in method builtins.callable}
9337 1.020 0.000 1.025 0.000 {built-in method builtins.eval}
5423833 0.784 0.000 0.808 0.000 {built-in method builtins.getattr}
1090956 0.266 0.000 0.413 0.000 {built-in method builtins.hasattr}
1218084 0.261 0.000 0.261 0.000 {built-in method builtins.hash}
8 0.000 0.000 0.000 0.000 {built-in method builtins.id}
22182828/22182824 4.257 0.000 6.124 0.000 {built-in method builtins.isinstance}
3106041 0.496 0.000 0.496 0.000 {built-in method builtins.issubclass}
20357 0.020 0.000 0.020 0.000 {built-in method builtins.iter}
6424574/5045377 1.275 0.000 1.866 0.000 {built-in method builtins.len}
9 0.000 0.000 0.000 0.000 {built-in method builtins.max}
14 0.000 0.000 0.000 0.000 {built-in method builtins.min}
9 0.000 0.000 0.000 0.000 {built-in method builtins.next}
22 0.000 0.000 0.000 0.000 {built-in method builtins.ord}
6120 0.296 0.000 0.296 0.000 {built-in method builtins.print}
1 0.000 0.000 0.000 0.000 {built-in method builtins.setattr}
12 0.000 0.000 0.001 0.000 {built-in method builtins.sorted}
39 0.000 0.000 0.000 0.000 {built-in method builtins.sum}
36041 0.079 0.000 0.225 0.000 {built-in method fromkeys}
1 0.000 0.000 0.000 0.000 {built-in method gc.get_referents}
18 0.000 0.000 0.000 0.000 {built-in method now}
11554 0.043 0.000 0.043 0.000 {built-in method numpy.arange}
62795 0.138 0.000 0.138 0.000 {built-in method numpy.array}
76924 0.044 0.000 0.044 0.000 {built-in method numpy.asanyarray}
1026829/961508 0.663 0.000 0.890 0.000 {built-in method numpy.asarray}
46319/46282 0.195 0.000 0.421 0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
10 0.000 0.000 0.000 0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
456368 0.561 0.000 0.561 0.000 {built-in method numpy.empty}
347336 0.098 0.000 0.098 0.000 {built-in method numpy.geterrobj}
173668 0.175 0.000 0.175 0.000 {built-in method numpy.seterrobj}
2214 0.004 0.000 0.004 0.000 {built-in method numpy.zeros}
4 0.000 0.000 0.000 0.000 {built-in method pandas._libs.lib.is_datetime_array}
294066 0.156 0.000 0.156 0.000 {built-in method pandas._libs.missing.checknull}
35776 0.020 0.000 0.020 0.000 {built-in method pandas._libs.missing.is_matching_na}
6 0.000 0.000 0.000 0.000 {built-in method pandas._libs.missing.isnaobj}
9337 0.004 0.000 0.004 0.000 {built-in method sys._getframe}
139534 0.058 0.000 0.058 0.000 {built-in method sys.intern}
3 0.000 0.000 0.000 0.000 {function FrozenList.__getitem__ at 0x7f647e12a320}
269731 0.031 0.000 0.031 0.000 {method '__contains__' of 'frozenset' objects}
11 0.000 0.000 0.000 0.000 {method '_rebuild_blknos_and_blklocs' of 'pandas._libs.internals.BlockManager' objects}
260411 0.030 0.000 0.030 0.000 {method 'add' of 'set' objects}
4 0.000 0.000 0.000 0.000 {method 'all' of 'numpy.ndarray' objects}
332925 0.248 0.000 1.691 0.000 {method 'any' of 'numpy.ndarray' objects}
77534 0.012 0.000 0.012 0.000 {method 'append' of 'list' objects}
1 0.000 0.000 0.000 0.000 {method 'append' of 'pandas._libs.internals.BlockPlacement' objects}
60139 0.142 0.000 0.142 0.000 {method 'argsort' of 'numpy.ndarray' objects}
240656 0.248 0.000 0.248 0.000 {method 'astype' of 'numpy.ndarray' objects}
14 0.000 0.000 0.000 0.000 {method 'clear' of 'dict' objects}
176890 0.217 0.000 0.217 0.000 {method 'copy' of 'numpy.ndarray' objects}
1 0.000 0.000 0.000 0.000 {method 'delete' of 'pandas._libs.internals.BlockPlacement' objects}
1 0.000 0.000 0.000 0.000 {method 'disable' of '_lsprof.Profiler' objects}
9360 0.041 0.000 10.540 0.001 {method 'extend' of 'list' objects}
23082 0.396 0.000 0.396 0.000 {method 'factorize' of 'pandas._libs.hashtable.Int64HashTable' objects}
6 0.017 0.003 0.017 0.003 {method 'factorize' of 'pandas._libs.hashtable.PyObjectHashTable' objects}
1 0.002 0.002 0.002 0.002 {method 'factorize' of 'pandas._libs.hashtable.StringHashTable' objects}
5 0.000 0.000 0.000 0.000 {method 'fill' of 'numpy.ndarray' objects}
187289 0.135 0.000 0.135 0.000 {method 'format' of 'str' objects}
323784 0.071 0.000 0.071 0.000 {method 'get' of 'dict' objects}
5 0.000 0.000 0.000 0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
11541 0.153 0.000 0.153 0.000 {method 'get_labels_groupby' of 'pandas._libs.hashtable.Int64HashTable' objects}
155755 0.167 0.000 0.167 0.000 {method 'get_loc' of 'pandas._libs.index.IndexEngine' objects}
30962 0.378 0.000 0.915 0.000 {method 'get_slice' of 'pandas._libs.internals.BlockManager' objects}
171060 0.064 0.000 0.064 0.000 {method 'index' of 'range' objects}
55522 0.023 0.000 0.023 0.000 {method 'insert' of 'list' objects}
269731 0.031 0.000 0.031 0.000 {method 'isidentifier' of 'str' objects}
4 0.000 0.000 0.000 0.000 {method 'item' of 'numpy.ndarray' objects}
11550 0.005 0.000 0.005 0.000 {method 'items' of 'dict' objects}
18674 0.036 0.000 0.068 0.000 {method 'join' of 'str' objects}
38247 0.012 0.000 0.012 0.000 {method 'keys' of 'dict' objects}
12 0.000 0.000 0.000 0.000 {method 'lower' of 'str' objects}
12 0.000 0.000 0.000 0.000 {method 'match' of 're.Pattern' objects}
159733 0.084 0.000 0.386 0.000 {method 'max' of 'numpy.ndarray' objects}
159728 0.098 0.000 0.733 0.000 {method 'min' of 'numpy.ndarray' objects}
16 0.000 0.000 0.000 0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
65326 0.133 0.000 0.133 0.000 {method 'nonzero' of 'numpy.ndarray' objects}
4 0.000 0.000 0.000 0.000 {method 'pop' of 'dict' objects}
1 0.000 0.000 0.000 0.000 {method 'pop' of 'set' objects}
11541 0.017 0.000 0.017 0.000 {method 'put' of 'numpy.ndarray' objects}
51083 0.046 0.000 0.046 0.000 {method 'ravel' of 'numpy.ndarray' objects}
663933 2.185 0.000 2.185 0.000 {method 'reduce' of 'numpy.ufunc' objects}
46183 0.064 0.000 0.064 0.000 {method 'remove' of 'list' objects}
95680 0.112 0.000 0.112 0.000 {method 'reshape' of 'numpy.ndarray' objects}
12 0.000 0.000 0.000 0.000 {method 'search' of 're.Pattern' objects}
174612 0.095 0.000 0.095 0.000 {method 'split' of 'str' objects}
260418 0.047 0.000 0.047 0.000 {method 'startswith' of 'str' objects}
123050 0.202 0.000 0.202 0.000 {method 'take' of 'numpy.ndarray' objects}
2 0.000 0.000 0.000 0.000 {method 'tolist' of 'numpy.ndarray' objects}
2208 0.002 0.000 0.002 0.000 {method 'transpose' of 'numpy.ndarray' objects}
3 0.000 0.000 0.000 0.000 {method 'upper' of 'str' objects}
249492 0.197 0.000 0.197 0.000 {method 'view' of 'numpy.ndarray' objects}
57705 0.055 0.000 0.055 0.000 {pandas._libs.algos.ensure_int64}
23082 0.096 0.000 0.096 0.000 {pandas._libs.algos.ensure_int8}
3936 0.001 0.000 0.001 0.000 {pandas._libs.algos.ensure_object}
547001 0.104 0.000 0.104 0.000 {pandas._libs.algos.ensure_platform_int}
9135 0.108 0.000 0.108 0.000 {pandas._libs.algos.groupsort_indexer}
101664 0.356 0.000 0.356 0.000 {pandas._libs.algos.take_1d_bool_bool}
124757 0.352 0.000 0.352 0.000 {pandas._libs.algos.take_1d_int64_int64}
819 0.003 0.000 0.003 0.000 {pandas._libs.algos.take_2d_axis0_int64_int64}
819 0.005 0.000 0.005 0.000 {pandas._libs.algos.take_2d_axis0_object_object}
76051 0.285 0.000 0.285 0.000 {pandas._libs.algos.take_2d_axis1_int64_int64}
76051 0.266 0.000 0.266 0.000 {pandas._libs.algos.take_2d_axis1_object_object}
62224 0.027 0.000 0.027 0.000 {pandas._libs.hashtable.object_hash}
7 0.000 0.000 0.000 0.000 {pandas._libs.internals.get_blkno_placements}
3 0.000 0.000 0.000 0.000 {pandas._libs.lib.array_equivalent_object}
1 0.000 0.000 0.000 0.000 {pandas._libs.lib.astype_intsafe}
1 0.001 0.001 0.001 0.001 {pandas._libs.lib.dicts_to_array}
36042 0.056 0.000 0.056 0.000 {pandas._libs.lib.dtypes_all_equal}
1 0.000 0.000 0.001 0.001 {pandas._libs.lib.fast_unique_multiple_list_gen}
1 0.000 0.000 0.000 0.000 {pandas._libs.lib.fast_unique_multiple_list}
7 0.001 0.000 0.001 0.000 {pandas._libs.lib.generate_slices}
3912 0.009 0.000 0.009 0.000 {pandas._libs.lib.infer_datetimelike_array}
37375 0.341 0.000 0.663 0.000 {pandas._libs.lib.infer_dtype}
1 0.000 0.000 0.000 0.000 {pandas._libs.lib.is_all_arraylike}
208359 0.035 0.000 0.035 0.000 {pandas._libs.lib.is_bool}
563203 0.081 0.000 0.081 0.000 {pandas._libs.lib.is_float}
1188290 0.164 0.000 0.164 0.000 {pandas._libs.lib.is_integer}
536219 0.088 0.000 0.088 0.000 {pandas._libs.lib.is_iterator}
2081752 0.834 0.000 0.889 0.000 {pandas._libs.lib.is_list_like}
739968 0.173 0.000 0.173 0.000 {pandas._libs.lib.is_scalar}
589431 0.111 0.000 0.111 0.000 {pandas._libs.lib.item_from_zerodim}
65 0.002 0.000 0.003 0.000 {pandas._libs.lib.maybe_convert_objects}
3 0.000 0.000 0.000 0.000 {pandas._libs.lib.maybe_indices_to_slice}
35780 0.239 0.000 0.239 0.000 {pandas._libs.missing.is_numeric_na}
51054 0.607 0.000 0.607 0.000 {pandas._libs.ops.scalar_compare}


